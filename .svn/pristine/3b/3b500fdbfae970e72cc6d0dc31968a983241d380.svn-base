package constants

import constants.SchemePlan.{GROWTH_FUND, HALF_YEARLY_FREQUENCY, _}

import scala.collection.mutable

/**
  * Created by fincash on 31-01-2017.
  */
object SchemePlan extends DBConstants {

  val SCHEME_PLAN_MAP = mutable.HashMap[String, String]()
  SCHEME_PLAN_MAP.+=(GROWTH_FUND -> GROWTH_FUND_VALUE)
  SCHEME_PLAN_MAP.+=(DIVIDEND_FUND -> DIVIDEND_FUND_VALUE)
  SCHEME_PLAN_MAP.+=(BONUS_FUND -> BONUS_FUND_VALUE)
  SCHEME_PLAN_MAP.+=(SWEEP_FUND -> SWEEP_FUND_VALUE)

  val TRANSACTION_TYPE_MAP = mutable.LinkedHashMap[String, String]()
  TRANSACTION_TYPE_MAP.+=(PURCHASE_TYPE -> "Purchase")
  TRANSACTION_TYPE_MAP.+=(REDEMPTION -> "Redemption")
  TRANSACTION_TYPE_MAP.+=(REINVESTMENT -> "Re-Investment")

  val DIVIDEND_OPTION_MAP = mutable.HashMap[String, String]()
  DIVIDEND_OPTION_MAP.+=(PAYOUT -> PAYOUT_VALUE)
  DIVIDEND_OPTION_MAP.+=(REINVESTMENT_DIVIDEND -> REINVESTMENT_DIVIDEND_VALUE)
  DIVIDEND_OPTION_MAP.+=(NOT_APPLICABLE -> NOT_APPLICABLE_VALUE)
  DIVIDEND_OPTION_MAP.+=(GROWTH -> GROWTH_VALUE)
  DIVIDEND_OPTION_MAP.+=(BONUS_FUND -> BONUS_FUND_VALUE)
  DIVIDEND_OPTION_MAP.+=(SWEEP_FUND -> SWEEP_FUND_VALUE)

  val DIVIDEND_FREQ_MAP = mutable.HashMap[String, String]()
  DIVIDEND_FREQ_MAP.+=(DAY -> DAY_VALUE)
  DIVIDEND_FREQ_MAP.+=(WEEK -> WEEK_VALUE)
  DIVIDEND_FREQ_MAP.+=(MONTH -> MONTH_VALUE)
  DIVIDEND_FREQ_MAP.+=(ANNUAL -> ANNUAL_VALUE)
  DIVIDEND_FREQ_MAP.+=(QUATERLY -> QUATERLY_VALUE)
  DIVIDEND_FREQ_MAP.+=(HALFYEARLY -> HALFYEARLY_VALUE)
  DIVIDEND_FREQ_MAP.+=(FORTNIGHTLY -> FORTNIGHTLY_VALUE)
  DIVIDEND_FREQ_MAP.+=(YEAR -> YEAR_VALUE)
  DIVIDEND_FREQ_MAP.+=(NORMAL -> NORMAL_VALUE)

  val SIP_FREQUENCY_FULLFORM_MAP = mutable.HashMap[String, String]()
  SIP_FREQUENCY_FULLFORM_MAP.+=(MONTHLY_FREQUENCY -> MONTHLY_FREQUENCY_VALUE)
  SIP_FREQUENCY_FULLFORM_MAP.+=(QUATERLY_FREQUENCY -> QUATERLY_FREQUENCY_VALUE)
  SIP_FREQUENCY_FULLFORM_MAP.+=(WEEKLY_FREQUENCY -> WEEKLY_FREQUENCY_VALUE)
  SIP_FREQUENCY_FULLFORM_MAP.+=(ANNUALLY_FREQUENCY -> ANNUALLY_FREQUENCY_VALUE)
  SIP_FREQUENCY_FULLFORM_MAP.+=(HALF_YEARLY_FREQUENCY -> HALF_YEARLY_FREQUENCY_VALUE)


  val SIP_FREQUENCY_SHORTFORM_MAP = mutable.HashMap[String, String]()
  SIP_FREQUENCY_SHORTFORM_MAP.+=(MONTHLY_FREQUENCY_VALUE -> MONTHLY_FREQUENCY)
  SIP_FREQUENCY_SHORTFORM_MAP.+=(QUATERLY_FREQUENCY_VALUE -> QUATERLY_FREQUENCY)
  SIP_FREQUENCY_SHORTFORM_MAP.+=(WEEKLY_FREQUENCY_VALUE -> WEEKLY_FREQUENCY)
  SIP_FREQUENCY_SHORTFORM_MAP.+=(ANNUALLY_FREQUENCY_VALUE -> ANNUALLY_FREQUENCY)
  SIP_FREQUENCY_SHORTFORM_MAP.+=(HALF_YEARLY_FREQUENCY_VALUE -> HALF_YEARLY_FREQUENCY)

  def getPlanOptionFreqMap(): mutable.LinkedHashMap[(String, String, String), Int] = {

    val PLAN_OPTION_FREQ_MAP = mutable.LinkedHashMap[(String, String, String), Int]()
    PLAN_OPTION_FREQ_MAP.+=((GROWTH_FUND, NOT_APPLICABLE, GROWTH) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((DIVIDEND_FUND, PAYOUT, DAY) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((DIVIDEND_FUND, PAYOUT, WEEK) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((DIVIDEND_FUND, PAYOUT, FORTNIGHTLY) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((DIVIDEND_FUND, PAYOUT, MONTH) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((DIVIDEND_FUND, PAYOUT, QUATERLY) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((DIVIDEND_FUND, PAYOUT, HALFYEARLY) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((DIVIDEND_FUND, PAYOUT, ANNUAL) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((REINVESTMENT_DIVIDEND, PAYOUT, DAY) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((REINVESTMENT_DIVIDEND, PAYOUT, WEEK) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((REINVESTMENT_DIVIDEND, PAYOUT, FORTNIGHTLY) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((REINVESTMENT_DIVIDEND, PAYOUT, MONTH) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((REINVESTMENT_DIVIDEND, PAYOUT, QUATERLY) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((REINVESTMENT_DIVIDEND, PAYOUT, HALFYEARLY) -> 0)
    PLAN_OPTION_FREQ_MAP.+=((REINVESTMENT_DIVIDEND, PAYOUT, ANNUAL) -> 0)

    PLAN_OPTION_FREQ_MAP
  }


}
